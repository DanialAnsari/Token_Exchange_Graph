// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptOrderAltered extends ethereum.Event {
  get params(): AcceptOrderAltered__Params {
    return new AcceptOrderAltered__Params(this);
  }
}

export class AcceptOrderAltered__Params {
  _event: AcceptOrderAltered;

  constructor(event: AcceptOrderAltered) {
    this._event = event;
  }

  get _id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sell_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CounterOrderAltered extends ethereum.Event {
  get params(): CounterOrderAltered__Params {
    return new CounterOrderAltered__Params(this);
  }
}

export class CounterOrderAltered__Params {
  _event: CounterOrderAltered;

  constructor(event: CounterOrderAltered) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sell_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _comment(): string {
    return this._event.parameters[3].value.toString();
  }

  get _status(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get buyer(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class SellOrderAltered extends ethereum.Event {
  get params(): SellOrderAltered__Params {
    return new SellOrderAltered__Params(this);
  }
}

export class SellOrderAltered__Params {
  _event: SellOrderAltered;

  constructor(event: SellOrderAltered) {
    this._event = event;
  }

  get _id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tokenToSell(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _paymentOption(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get _price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _tokenToExchange(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get _seller(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get _status(): i32 {
    return this._event.parameters[8].value.toI32();
  }
}

export class Token_exchange__AcceptOrdersResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class Token_exchange__CounterOrdersResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: string;
  value4: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: string,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }
}

export class Token_exchange__SellOrdersResult {
  value0: Address;
  value1: BigInt;
  value2: i32;
  value3: BigInt;
  value4: Address;
  value5: Address;
  value6: BigInt;
  value7: i32;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: i32,
    value3: BigInt,
    value4: Address,
    value5: Address,
    value6: BigInt,
    value7: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set(
      "value7",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value7))
    );
    return map;
  }
}

export class Token_exchange extends ethereum.SmartContract {
  static bind(address: Address): Token_exchange {
    return new Token_exchange("Token_exchange", address);
  }

  AcceptOrders(param0: BigInt): Token_exchange__AcceptOrdersResult {
    let result = super.call(
      "AcceptOrders",
      "AcceptOrders(uint256):(uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Token_exchange__AcceptOrdersResult(
      result[0].toBigInt(),
      result[1].toAddress()
    );
  }

  try_AcceptOrders(
    param0: BigInt
  ): ethereum.CallResult<Token_exchange__AcceptOrdersResult> {
    let result = super.tryCall(
      "AcceptOrders",
      "AcceptOrders(uint256):(uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Token_exchange__AcceptOrdersResult(
        value[0].toBigInt(),
        value[1].toAddress()
      )
    );
  }

  CounterOrders(param0: BigInt): Token_exchange__CounterOrdersResult {
    let result = super.call(
      "CounterOrders",
      "CounterOrders(uint256):(uint256,uint256,address,string,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Token_exchange__CounterOrdersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toI32()
    );
  }

  try_CounterOrders(
    param0: BigInt
  ): ethereum.CallResult<Token_exchange__CounterOrdersResult> {
    let result = super.tryCall(
      "CounterOrders",
      "CounterOrders(uint256):(uint256,uint256,address,string,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Token_exchange__CounterOrdersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toI32()
      )
    );
  }

  SellOrders(param0: BigInt): Token_exchange__SellOrdersResult {
    let result = super.call(
      "SellOrders",
      "SellOrders(uint256):(address,uint256,uint8,uint256,address,address,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Token_exchange__SellOrdersResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toAddress(),
      result[6].toBigInt(),
      result[7].toI32()
    );
  }

  try_SellOrders(
    param0: BigInt
  ): ethereum.CallResult<Token_exchange__SellOrdersResult> {
    let result = super.tryCall(
      "SellOrders",
      "SellOrders(uint256):(address,uint256,uint8,uint256,address,address,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Token_exchange__SellOrdersResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toAddress(),
        value[6].toBigInt(),
        value[7].toI32()
      )
    );
  }

  getQuantity(_sellid: BigInt): BigInt {
    let result = super.call("getQuantity", "getQuantity(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_sellid)
    ]);

    return result[0].toBigInt();
  }

  try_getQuantity(_sellid: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getQuantity",
      "getQuantity(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_sellid)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  negotiate(_sellid: BigInt, _price: BigInt, _comment: string): BigInt {
    let result = super.call(
      "negotiate",
      "negotiate(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_sellid),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromString(_comment)
      ]
    );

    return result[0].toBigInt();
  }

  try_negotiate(
    _sellid: BigInt,
    _price: BigInt,
    _comment: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "negotiate",
      "negotiate(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_sellid),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromString(_comment)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registerOrder(
    _tokenToSell: Address,
    _amount: BigInt,
    _quantity: BigInt,
    _paymentOption: i32,
    _price: BigInt,
    _tokenToExchange: Address
  ): BigInt {
    let result = super.call(
      "registerOrder",
      "registerOrder(address,uint256,uint256,uint8,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenToSell),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_quantity),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_paymentOption)),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromAddress(_tokenToExchange)
      ]
    );

    return result[0].toBigInt();
  }

  try_registerOrder(
    _tokenToSell: Address,
    _amount: BigInt,
    _quantity: BigInt,
    _paymentOption: i32,
    _price: BigInt,
    _tokenToExchange: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "registerOrder",
      "registerOrder(address,uint256,uint256,uint8,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenToSell),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_quantity),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_paymentOption)),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromAddress(_tokenToExchange)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptCounterOrderCall extends ethereum.Call {
  get inputs(): AcceptCounterOrderCall__Inputs {
    return new AcceptCounterOrderCall__Inputs(this);
  }

  get outputs(): AcceptCounterOrderCall__Outputs {
    return new AcceptCounterOrderCall__Outputs(this);
  }
}

export class AcceptCounterOrderCall__Inputs {
  _call: AcceptCounterOrderCall;

  constructor(call: AcceptCounterOrderCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptCounterOrderCall__Outputs {
  _call: AcceptCounterOrderCall;

  constructor(call: AcceptCounterOrderCall) {
    this._call = call;
  }
}

export class BuyCounterOrderCall extends ethereum.Call {
  get inputs(): BuyCounterOrderCall__Inputs {
    return new BuyCounterOrderCall__Inputs(this);
  }

  get outputs(): BuyCounterOrderCall__Outputs {
    return new BuyCounterOrderCall__Outputs(this);
  }
}

export class BuyCounterOrderCall__Inputs {
  _call: BuyCounterOrderCall;

  constructor(call: BuyCounterOrderCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyCounterOrderCall__Outputs {
  _call: BuyCounterOrderCall;

  constructor(call: BuyCounterOrderCall) {
    this._call = call;
  }
}

export class BuySellOrderCall extends ethereum.Call {
  get inputs(): BuySellOrderCall__Inputs {
    return new BuySellOrderCall__Inputs(this);
  }

  get outputs(): BuySellOrderCall__Outputs {
    return new BuySellOrderCall__Outputs(this);
  }
}

export class BuySellOrderCall__Inputs {
  _call: BuySellOrderCall;

  constructor(call: BuySellOrderCall) {
    this._call = call;
  }

  get _sellid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuySellOrderCall__Outputs {
  _call: BuySellOrderCall;

  constructor(call: BuySellOrderCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CancelCounterOrderCall extends ethereum.Call {
  get inputs(): CancelCounterOrderCall__Inputs {
    return new CancelCounterOrderCall__Inputs(this);
  }

  get outputs(): CancelCounterOrderCall__Outputs {
    return new CancelCounterOrderCall__Outputs(this);
  }
}

export class CancelCounterOrderCall__Inputs {
  _call: CancelCounterOrderCall;

  constructor(call: CancelCounterOrderCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelCounterOrderCall__Outputs {
  _call: CancelCounterOrderCall;

  constructor(call: CancelCounterOrderCall) {
    this._call = call;
  }
}

export class DecreamentQuantityCall extends ethereum.Call {
  get inputs(): DecreamentQuantityCall__Inputs {
    return new DecreamentQuantityCall__Inputs(this);
  }

  get outputs(): DecreamentQuantityCall__Outputs {
    return new DecreamentQuantityCall__Outputs(this);
  }
}

export class DecreamentQuantityCall__Inputs {
  _call: DecreamentQuantityCall;

  constructor(call: DecreamentQuantityCall) {
    this._call = call;
  }

  get sell_id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreamentQuantityCall__Outputs {
  _call: DecreamentQuantityCall;

  constructor(call: DecreamentQuantityCall) {
    this._call = call;
  }
}

export class IncreamentQuantityCall extends ethereum.Call {
  get inputs(): IncreamentQuantityCall__Inputs {
    return new IncreamentQuantityCall__Inputs(this);
  }

  get outputs(): IncreamentQuantityCall__Outputs {
    return new IncreamentQuantityCall__Outputs(this);
  }
}

export class IncreamentQuantityCall__Inputs {
  _call: IncreamentQuantityCall;

  constructor(call: IncreamentQuantityCall) {
    this._call = call;
  }

  get sell_id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreamentQuantityCall__Outputs {
  _call: IncreamentQuantityCall;

  constructor(call: IncreamentQuantityCall) {
    this._call = call;
  }
}

export class NegotiateCall extends ethereum.Call {
  get inputs(): NegotiateCall__Inputs {
    return new NegotiateCall__Inputs(this);
  }

  get outputs(): NegotiateCall__Outputs {
    return new NegotiateCall__Outputs(this);
  }
}

export class NegotiateCall__Inputs {
  _call: NegotiateCall;

  constructor(call: NegotiateCall) {
    this._call = call;
  }

  get _sellid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _comment(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class NegotiateCall__Outputs {
  _call: NegotiateCall;

  constructor(call: NegotiateCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RecieveAssetsCall extends ethereum.Call {
  get inputs(): RecieveAssetsCall__Inputs {
    return new RecieveAssetsCall__Inputs(this);
  }

  get outputs(): RecieveAssetsCall__Outputs {
    return new RecieveAssetsCall__Outputs(this);
  }
}

export class RecieveAssetsCall__Inputs {
  _call: RecieveAssetsCall;

  constructor(call: RecieveAssetsCall) {
    this._call = call;
  }

  get _sellid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RecieveAssetsCall__Outputs {
  _call: RecieveAssetsCall;

  constructor(call: RecieveAssetsCall) {
    this._call = call;
  }
}

export class RegisterOrderCall extends ethereum.Call {
  get inputs(): RegisterOrderCall__Inputs {
    return new RegisterOrderCall__Inputs(this);
  }

  get outputs(): RegisterOrderCall__Outputs {
    return new RegisterOrderCall__Outputs(this);
  }
}

export class RegisterOrderCall__Inputs {
  _call: RegisterOrderCall;

  constructor(call: RegisterOrderCall) {
    this._call = call;
  }

  get _tokenToSell(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _paymentOption(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _tokenToExchange(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class RegisterOrderCall__Outputs {
  _call: RegisterOrderCall;

  constructor(call: RegisterOrderCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
